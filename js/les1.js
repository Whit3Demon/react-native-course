// Урок 1. Переменные и типы данных
// Переменные let, const, var.
// Типы данных (числа, строки, булевы значения).
// Основные операции с числами и строками.

// Урок 1. Переменные и типы данных
// 1. Что такое переменные?
// Переменная в программировании — это имя, связанное с определённым участком памяти, где хранится значение. В JavaScript переменные помогают нам хранить и манипулировать данными.

// Чтобы объявить переменную, используем ключевые слова let, const или var:

// let — для переменных, значение которых может изменяться.
// const — для переменных, значение которых после присвоения не меняется.
// var — старый способ объявления переменных, используемый до ES6 (2015). Сейчас var применяют редко, так как let и const более предсказуемы и удобны.
// Пример:

// javascript
// Копировать код

let age = 25; // переменная age может изменяться
const name = "John"; // переменная name не изменяется
var isStudent = true; // переменная isStudent может изменяться, но лучше использовать let

// 2. Основные типы данных
// В JavaScript есть несколько основных типов данных:

// Числа (number) — используются для хранения целых и дробных чисел.

// javascript
// Копировать код
let age = 30; // целое число
let temperature = 36.6; // дробное число
// Строки (string) — используются для хранения текста. Строки заключаются в одинарные '...', двойные "...", или косые обратные кавычки `...`.

// javascript
// Копировать код
let greeting = "Hello, World!";
let name = "Alice";
let message = `My name is ${name}`; // шаблонная строка
// Булевы значения (boolean) — могут быть либо true (истина), либо false (ложь).

// javascript
// Копировать код
let isAdult = true;
let isStudent = false;
// 3. Основные операции с числами и строками
// Арифметические операции с числами:

// Сложение: +
// Вычитание: -
// Умножение: *
// Деление: /
// Остаток от деления: %
// Возведение в степень: **
// Пример:

// javascript
// Копировать код
let a = 10;
let b = 3;
console.log(a + b); // 13
console.log(a - b); // 7
console.log(a * b); // 30
console.log(a / b); // 3.333...
console.log(a % b); // 1
console.log(a ** b); // 1000
// Операции со строками:

// Конкатенация (объединение) строк: + позволяет объединить две строки в одну.
// Пример:

// javascript
// Копировать код
let firstName = "John";
let lastName = "Doe";
let fullName = firstName + " " + lastName;
console.log(fullName); // "John Doe"
// Шаблонные строки:

// Шаблонные строки (template literals) позволяют вставлять переменные и выражения внутрь строки, используя синтаксис `...${переменная}...`. Это удобно для формирования сообщений и текста.
// Пример:

// javascript
// Копировать код
let age = 25;
let name = "Alice";
let message = `My name is ${name} and I am ${age} years old.`;
console.log(message); // "My name is Alice and I am 25 years old."
// Закрепим:
// Объявите переменную let для возраста и попробуйте изменить её значение.
// Создайте const для имени и попытайтесь изменить его значение, чтобы увидеть ошибку.
// Попробуйте операции сложения и вычитания с числами и объединение строк, чтобы закрепить материал.
